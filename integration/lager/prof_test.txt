Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls   s/call   s/call  name    
 54.32     27.54    27.54 19647249     0.00     0.00  get_ptr_page
 18.70     37.02     9.48 3871512581     0.00     0.00  page_get_start
 14.49     44.36     7.34 3871512581     0.00     0.00  page_get_end
  7.46     48.14     3.78    20004     0.00     0.00  forward_internal_array_ptrs_with_offset
  1.65     48.98     0.84        1     0.84     0.84  create_pages
  0.81     49.39     0.41    40006     0.00     0.00  h_used
  0.79     49.79     0.40        1     0.40    48.77  h_gc_dbg
  0.47     50.03     0.24 75051256     0.00     0.00  page_get_used
  0.38     50.22     0.19    20000     0.00     0.00  list_contains
  0.24     50.34     0.12 15691488     0.00     0.00  find_next_active_page
  0.16     50.42     0.08    40004     0.00     0.00  h_alloc_raw
  0.14     50.49     0.07 15690702     0.00     0.00  page_get_avail
  0.12     50.55     0.06    40004     0.00     0.00  h_alloc
  0.11     50.60     0.06 96985237     0.00     0.00  int_cell_comparator
  0.05     50.63     0.03                             frame_dummy
  0.02     50.64     0.01  1004881     0.00     0.00  header_from_data
  0.02     50.65     0.01   659901     0.00     0.00  get_internal_ht
  0.02     50.66     0.01   164963     0.00     0.00  move_ptr_forward
  0.02     50.67     0.01   109987     0.00     0.00  alloc_map_ptr_used
  0.02     50.68     0.01    80008     0.00     0.00  set_type_bits
  0.02     50.69     0.01    20000     0.00     0.00  list_append
  0.02     50.70     0.01        1     0.01     0.01  get_ptrs_from_stack
  0.02     50.71     0.01                             page_get_size
  0.01     50.71     0.01    20004     0.00     0.00  h_alloc_struct
  0.01     50.72     0.01    20000     0.00     0.00  h_alloc_data
  0.00     50.72     0.00   354937     0.00     0.00  get_header_type
  0.00     50.72     0.00   345011     0.00     0.00  get_size_of_bit_type
  0.00     50.72     0.00   229999     0.00     0.00  alloc_map_check_offset
  0.00     50.72     0.00   120012     0.00     0.00  alloc_map_set
  0.00     50.72     0.00   109968     0.00     0.00  get_number_of_pointers_in_bit_vector
  0.00     50.72     0.00   109968     0.00     0.00  get_number_of_pointers_in_struct
  0.00     50.72     0.00   100012     0.00     0.00  get_existing_size
  0.00     50.72     0.00    80024     0.00     0.00  size_for
  0.00     50.72     0.00    80016     0.00     0.00  clear_type_bits
  0.00     50.72     0.00    80008     0.00     0.00  data_from_header
  0.00     50.72     0.00    80008     0.00     0.00  page_get_bump
  0.00     50.72     0.00    80008     0.00     0.00  page_move_bump
  0.00     50.72     0.00    60012     0.00     0.00  get_bit_vector_size
  0.00     50.72     0.00    60008     0.00     0.00  get_existing_data_size
  0.00     50.72     0.00    60000     0.00     0.00  get_data_size
  0.00     50.72     0.00    54984     0.00     0.00  get_pointers_from_bit_vector
  0.00     50.72     0.00    54984     0.00     0.00  get_pointers_in_struct
  0.00     50.72     0.00    40012     0.00     0.00  get_bit_mask
  0.00     50.72     0.00    40012     0.00     0.00  get_bits_needed
  0.00     50.72     0.00    40008     0.00     0.00  get_struct_size
  0.00     50.72     0.00    40004     0.00     0.00  copy_header
  0.00     50.72     0.00    40004     0.00     0.00  forward_header
  0.00     50.72     0.00    40004     0.00     0.00  run_gc_if_above_threshold
  0.00     50.72     0.00    40000     0.00     0.00  get_raw_data_size
  0.00     50.72     0.00    20004     0.00     0.00  bit_vector_create
  0.00     50.72     0.00    20004     0.00     0.00  create_struct_header
  0.00     50.72     0.00    20004     0.00     0.00  format_str_contains_ptrs
  0.00     50.72     0.00    20000     0.00     0.00  create_data_header
  0.00     50.72     0.00     1876     0.00     0.00  page_get_type
  0.00     50.72     0.00      786     0.00     0.00  find_first_passive_page
  0.00     50.72     0.00      393     0.00     0.00  number_of_passive_pages
  0.00     50.72     0.00      393     0.00     0.00  page_reset
  0.00     50.72     0.00      393     0.00     0.00  page_set_type
  0.00     50.72     0.00       21     0.00     0.00  stack_find_next_ptr
  0.00     50.72     0.00       10     0.00     0.00  get_number_of_active_heap_ptrs_rec
  0.00     50.72     0.00        9     0.00     0.00  get_active_heap_ptrs_rec
  0.00     50.72     0.00        8     0.00     0.00  get_forwarding_address
  0.00     50.72     0.00        4     0.00     0.00  list_new
  0.00     50.72     0.00        1     0.00     0.00  alloc_map_create
  0.00     50.72     0.00        1     0.00     0.00  alloc_map_mem_size_needed
  0.00     50.72     0.00        1     0.00     0.02  get_active_ptrs
  0.00     50.72     0.00        1     0.00     0.02  get_number_of_active_ptrs
  0.00     50.72     0.00        1     0.00     0.00  h_delete
  0.00     50.72     0.00        1     0.00    48.77  h_gc
  0.00     50.72     0.00        1     0.00     0.84  h_init
  0.00     50.72     0.00        1     0.00     0.00  set_active_to_transition
  0.00     50.72     0.00        1     0.00     0.00  set_unsafe_pages_to_active

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.02% of 50.72 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     99.9    0.00   50.68                 main [1]
                0.00   48.77       1/1           h_gc [2]
                0.00    0.84       1/1           h_init [9]
                0.01    0.41   20000/20000       list_append [13]
                0.01    0.41   20000/20000       h_alloc_data [15]
                0.19    0.06   20000/20000       list_contains [16]
                0.00    0.00       4/4           list_new [46]
                0.00    0.00       1/1           h_delete [71]
-----------------------------------------------
                0.00   48.77       1/1           main [1]
[2]     96.2    0.00   48.77       1         h_gc [2]
                0.40   48.37       1/1           h_gc_dbg [3]
-----------------------------------------------
                0.40   48.37       1/1           h_gc [2]
[3]     96.2    0.40   48.37       1         h_gc_dbg [3]
               27.54   16.82 19647249/19647249     get_ptr_page [4]
                3.78    0.00   20004/20004       forward_internal_array_ptrs_with_offset [7]
                0.08    0.10   40004/40004       h_alloc_raw [18]
                0.00    0.02       1/1           get_active_ptrs [23]
                0.00    0.02       1/1           get_number_of_active_ptrs [24]
                0.00    0.00   80016/354937      get_header_type [36]
                0.00    0.00       2/40006       h_used [11]
                0.00    0.00       8/8           get_forwarding_address [47]
                0.00    0.00    1876/1876        page_get_type [63]
                0.00    0.00     393/393         page_set_type [67]
                0.00    0.00     393/393         page_reset [66]
                0.00    0.00       1/1           set_active_to_transition [72]
                0.00    0.00       1/1           set_unsafe_pages_to_active [73]
-----------------------------------------------
               27.54   16.82 19647249/19647249     h_gc_dbg [3]
[4]     87.5   27.54   16.82 19647249         get_ptr_page [4]
                9.48    0.00 3871512581/3871512581     page_get_start [5]
                7.34    0.00 3871512581/3871512581     page_get_end [6]
-----------------------------------------------
                9.48    0.00 3871512581/3871512581     get_ptr_page [4]
[5]     18.7    9.48    0.00 3871512581         page_get_start [5]
-----------------------------------------------
                7.34    0.00 3871512581/3871512581     get_ptr_page [4]
[6]     14.5    7.34    0.00 3871512581         page_get_end [6]
-----------------------------------------------
                3.78    0.00   20004/20004       h_gc_dbg [3]
[7]      7.5    3.78    0.00   20004         forward_internal_array_ptrs_with_offset [7]
                0.00    0.00   20004/60008       get_existing_data_size [40]
-----------------------------------------------
                0.84    0.00       1/1           h_init [9]
[8]      1.6    0.84    0.00       1         create_pages [8]
-----------------------------------------------
                0.00    0.84       1/1           main [1]
[9]      1.6    0.00    0.84       1         h_init [9]
                0.84    0.00       1/1           create_pages [8]
                0.00    0.00       1/1           alloc_map_mem_size_needed [70]
                0.00    0.00       1/1           alloc_map_create [69]
-----------------------------------------------
                0.03    0.37   20000/40004       h_alloc_data [15]
                0.03    0.37   20004/40004       h_alloc_struct [14]
[10]     1.6    0.06    0.75   40004         h_alloc [10]
                0.00    0.65   40004/40004       run_gc_if_above_threshold [12]
                0.06    0.00 7865500/15691488     find_next_active_page [19]
                0.04    0.00 7865107/15690702     page_get_avail [20]
                0.00    0.00   40004/80008       page_get_bump [55]
                0.00    0.00   40004/80008       page_move_bump [56]
                0.00    0.00     393/393         number_of_passive_pages [65]
                0.00    0.00     393/786         find_first_passive_page [64]
-----------------------------------------------
                0.00    0.00       2/40006       h_gc_dbg [3]
                0.41    0.24   40004/40006       run_gc_if_above_threshold [12]
[11]     1.3    0.41    0.24   40006         h_used [11]
                0.24    0.00 75051256/75051256     page_get_used [17]
-----------------------------------------------
                0.00    0.65   40004/40004       h_alloc [10]
[12]     1.3    0.00    0.65   40004         run_gc_if_above_threshold [12]
                0.41    0.24   40004/40006       h_used [11]
-----------------------------------------------
                0.01    0.41   20000/20000       main [1]
[13]     0.8    0.01    0.41   20000         list_append [13]
                0.01    0.41   20000/20004       h_alloc_struct [14]
-----------------------------------------------
                0.00    0.00       4/20004       list_new [46]
                0.01    0.41   20000/20004       list_append [13]
[14]     0.8    0.01    0.41   20004         h_alloc_struct [14]
                0.03    0.37   20004/40004       h_alloc [10]
                0.00    0.00   20004/20004       create_struct_header [41]
                0.00    0.00   20004/40008       get_struct_size [60]
                0.00    0.00   20004/120012      alloc_map_set [50]
-----------------------------------------------
                0.01    0.41   20000/20000       main [1]
[15]     0.8    0.01    0.41   20000         h_alloc_data [15]
                0.03    0.37   20000/40004       h_alloc [10]
                0.00    0.00   20000/20000       create_data_header [42]
                0.00    0.00   20000/60000       get_data_size [57]
                0.00    0.00   20000/120012      alloc_map_set [50]
-----------------------------------------------
                0.19    0.06   20000/20000       main [1]
[16]     0.5    0.19    0.06   20000         list_contains [16]
                0.06    0.00 96985237/96985237     int_cell_comparator [21]
-----------------------------------------------
                0.24    0.00 75051256/75051256     h_used [11]
[17]     0.5    0.24    0.00 75051256         page_get_used [17]
-----------------------------------------------
                0.08    0.10   40004/40004       h_gc_dbg [3]
[18]     0.4    0.08    0.10   40004         h_alloc_raw [18]
                0.06    0.00 7825988/15691488     find_next_active_page [19]
                0.03    0.00 7825595/15690702     page_get_avail [20]
                0.00    0.01   40004/40004       forward_header [38]
                0.00    0.00   40004/100012      get_existing_size [39]
                0.00    0.00   40004/60008       get_existing_data_size [40]
                0.00    0.00   40004/40004       copy_header [45]
                0.00    0.00   80008/120012      alloc_map_set [50]
                0.00    0.00   40004/80008       page_get_bump [55]
                0.00    0.00   40004/80008       page_move_bump [56]
                0.00    0.00     393/786         find_first_passive_page [64]
-----------------------------------------------
                0.06    0.00 7825988/15691488     h_alloc_raw [18]
                0.06    0.00 7865500/15691488     h_alloc [10]
[19]     0.2    0.12    0.00 15691488         find_next_active_page [19]
-----------------------------------------------
                0.03    0.00 7825595/15690702     h_alloc_raw [18]
                0.04    0.00 7865107/15690702     h_alloc [10]
[20]     0.1    0.07    0.00 15690702         page_get_avail [20]
-----------------------------------------------
                0.06    0.00 96985237/96985237     list_contains [16]
[21]     0.1    0.06    0.00 96985237         int_cell_comparator [21]
-----------------------------------------------
                                                 <spontaneous>
[22]     0.0    0.03    0.00                 frame_dummy [22]
-----------------------------------------------
                0.00    0.02       1/1           h_gc_dbg [3]
[23]     0.0    0.00    0.02       1         get_active_ptrs [23]
                0.00    0.01       9/9           get_active_heap_ptrs_rec [28]
                0.01    0.00       1/1           get_ptrs_from_stack [30]
-----------------------------------------------
                0.00    0.02       1/1           h_gc_dbg [3]
[24]     0.0    0.00    0.02       1         get_number_of_active_ptrs [24]
                0.00    0.02      10/10          get_number_of_active_heap_ptrs_rec [25]
                0.00    0.00      10/109987      alloc_map_ptr_used [33]
                0.00    0.00      11/21          stack_find_next_ptr [68]
-----------------------------------------------
                               59958             get_number_of_active_heap_ptrs_rec [25]
                0.00    0.02      10/10          get_number_of_active_ptrs [24]
[25]     0.0    0.00    0.02      10+59958   get_number_of_active_heap_ptrs_rec [25]
                0.00    0.01   29986/54984       get_pointers_in_struct [26]
                0.01    0.00   59972/109987      alloc_map_ptr_used [33]
                0.00    0.00   29986/109968      get_number_of_pointers_in_struct [37]
                0.00    0.00   59968/354937      get_header_type [36]
                               59958             get_number_of_active_heap_ptrs_rec [25]
-----------------------------------------------
                0.00    0.01   24998/54984       get_active_heap_ptrs_rec [28]
                0.00    0.01   29986/54984       get_number_of_active_heap_ptrs_rec [25]
[26]     0.0    0.00    0.02   54984         get_pointers_in_struct [26]
                0.00    0.01   54984/54984       get_pointers_from_bit_vector [29]
                0.00    0.00   54984/109968      get_number_of_pointers_in_struct [37]
                0.00    0.00   54984/354937      get_header_type [36]
                0.00    0.00   54984/659901      get_internal_ht [27]
-----------------------------------------------
                0.00    0.00   40000/659901      get_raw_data_size [43]
                0.00    0.00   54984/659901      get_pointers_in_struct [26]
                0.00    0.00  100012/659901      get_existing_size [39]
                0.00    0.00  109968/659901      get_number_of_pointers_in_struct [37]
                0.01    0.00  354937/659901      get_header_type [36]
[27]     0.0    0.01    0.01  659901         get_internal_ht [27]
                0.01    0.00  659901/1004881     header_from_data [31]
-----------------------------------------------
                               49984             get_active_heap_ptrs_rec [28]
                0.00    0.01       9/9           get_active_ptrs [23]
[28]     0.0    0.00    0.01       9+49984   get_active_heap_ptrs_rec [28]
                0.00    0.01   24998/54984       get_pointers_in_struct [26]
                0.00    0.00   49996/109987      alloc_map_ptr_used [33]
                0.00    0.00   24998/109968      get_number_of_pointers_in_struct [37]
                0.00    0.00   49993/354937      get_header_type [36]
                               49984             get_active_heap_ptrs_rec [28]
-----------------------------------------------
                0.00    0.01   54984/54984       get_pointers_in_struct [26]
[29]     0.0    0.00    0.01   54984         get_pointers_from_bit_vector [29]
                0.01    0.00  164963/164963      move_ptr_forward [32]
                0.00    0.00   54984/1004881     header_from_data [31]
                0.00    0.00  164963/345011      get_size_of_bit_type [48]
-----------------------------------------------
                0.01    0.00       1/1           get_active_ptrs [23]
[30]     0.0    0.01    0.00       1         get_ptrs_from_stack [30]
                0.00    0.00       9/109987      alloc_map_ptr_used [33]
                0.00    0.00      10/21          stack_find_next_ptr [68]
-----------------------------------------------
                0.00    0.00       8/1004881     get_forwarding_address [47]
                0.00    0.00   40000/1004881     get_raw_data_size [43]
                0.00    0.00   40004/1004881     copy_header [45]
                0.00    0.00   40004/1004881     forward_header [38]
                0.00    0.00   54984/1004881     get_pointers_from_bit_vector [29]
                0.00    0.00   60012/1004881     get_bit_vector_size [44]
                0.00    0.00  109968/1004881     get_number_of_pointers_in_struct [37]
                0.01    0.00  659901/1004881     get_internal_ht [27]
[31]     0.0    0.01    0.00 1004881         header_from_data [31]
-----------------------------------------------
                0.01    0.00  164963/164963      get_pointers_from_bit_vector [29]
[32]     0.0    0.01    0.00  164963         move_ptr_forward [32]
-----------------------------------------------
                0.00    0.00       9/109987      get_ptrs_from_stack [30]
                0.00    0.00      10/109987      get_number_of_active_ptrs [24]
                0.00    0.00   49996/109987      get_active_heap_ptrs_rec [28]
                0.01    0.00   59972/109987      get_number_of_active_heap_ptrs_rec [25]
[33]     0.0    0.01    0.00  109987         alloc_map_ptr_used [33]
                0.00    0.00  109987/229999      alloc_map_check_offset [49]
-----------------------------------------------
                0.00    0.00   20000/80008       create_data_header [42]
                0.00    0.00   20004/80008       create_struct_header [41]
                0.01    0.00   40004/80008       forward_header [38]
[34]     0.0    0.01    0.00   80008         set_type_bits [34]
                0.00    0.00   80008/80016       clear_type_bits [53]
-----------------------------------------------
                                                 <spontaneous>
[35]     0.0    0.01    0.00                 page_get_size [35]
-----------------------------------------------
                0.00    0.00       8/354937      get_forwarding_address [47]
                0.00    0.00   49993/354937      get_active_heap_ptrs_rec [28]
                0.00    0.00   54984/354937      get_pointers_in_struct [26]
                0.00    0.00   59968/354937      get_number_of_active_heap_ptrs_rec [25]
                0.00    0.00   80016/354937      h_gc_dbg [3]
                0.00    0.00  109968/354937      get_number_of_pointers_in_struct [37]
[36]     0.0    0.00    0.01  354937         get_header_type [36]
                0.01    0.00  354937/659901      get_internal_ht [27]
-----------------------------------------------
                0.00    0.00   24998/109968      get_active_heap_ptrs_rec [28]
                0.00    0.00   29986/109968      get_number_of_active_heap_ptrs_rec [25]
                0.00    0.00   54984/109968      get_pointers_in_struct [26]
[37]     0.0    0.00    0.01  109968         get_number_of_pointers_in_struct [37]
                0.00    0.00  109968/354937      get_header_type [36]
                0.00    0.00  109968/659901      get_internal_ht [27]
                0.00    0.00  109968/1004881     header_from_data [31]
                0.00    0.00  109968/109968      get_number_of_pointers_in_bit_vector [51]
-----------------------------------------------
                0.00    0.01   40004/40004       h_alloc_raw [18]
[38]     0.0    0.00    0.01   40004         forward_header [38]
                0.01    0.00   40004/80008       set_type_bits [34]
                0.00    0.00   40004/1004881     header_from_data [31]
-----------------------------------------------
                0.00    0.00   40004/100012      h_alloc_raw [18]
                0.00    0.00   60008/100012      get_existing_data_size [40]
[39]     0.0    0.00    0.00  100012         get_existing_size [39]
                0.00    0.00  100012/659901      get_internal_ht [27]
                0.00    0.00   40000/40000       get_raw_data_size [43]
                0.00    0.00   60012/60012       get_bit_vector_size [44]
-----------------------------------------------
                0.00    0.00   20004/60008       forward_internal_array_ptrs_with_offset [7]
                0.00    0.00   40004/60008       h_alloc_raw [18]
[40]     0.0    0.00    0.00   60008         get_existing_data_size [40]
                0.00    0.00   60008/100012      get_existing_size [39]
-----------------------------------------------
                0.00    0.00   20004/20004       h_alloc_struct [14]
[41]     0.0    0.00    0.00   20004         create_struct_header [41]
                0.00    0.00   20004/80008       set_type_bits [34]
                0.00    0.00   20004/40008       get_struct_size [60]
                0.00    0.00   20004/20004       format_str_contains_ptrs [62]
                0.00    0.00   20004/20004       bit_vector_create [61]
                0.00    0.00   20004/80008       data_from_header [54]
-----------------------------------------------
                0.00    0.00   20000/20000       h_alloc_data [15]
[42]     0.0    0.00    0.00   20000         create_data_header [42]
                0.00    0.00   20000/80008       set_type_bits [34]
                0.00    0.00   20000/80008       data_from_header [54]
-----------------------------------------------
                0.00    0.00   40000/40000       get_existing_size [39]
[43]     0.0    0.00    0.00   40000         get_raw_data_size [43]
                0.00    0.00   40000/659901      get_internal_ht [27]
                0.00    0.00   40000/1004881     header_from_data [31]
                0.00    0.00   40000/60000       get_data_size [57]
-----------------------------------------------
                0.00    0.00   60012/60012       get_existing_size [39]
[44]     0.0    0.00    0.00   60012         get_bit_vector_size [44]
                0.00    0.00   60012/1004881     header_from_data [31]
                0.00    0.00  180048/345011      get_size_of_bit_type [48]
-----------------------------------------------
                0.00    0.00   40004/40004       h_alloc_raw [18]
[45]     0.0    0.00    0.00   40004         copy_header [45]
                0.00    0.00   40004/1004881     header_from_data [31]
                0.00    0.00   40004/80008       data_from_header [54]
-----------------------------------------------
                0.00    0.00       4/4           main [1]
[46]     0.0    0.00    0.00       4         list_new [46]
                0.00    0.00       4/20004       h_alloc_struct [14]
-----------------------------------------------
                0.00    0.00       8/8           h_gc_dbg [3]
[47]     0.0    0.00    0.00       8         get_forwarding_address [47]
                0.00    0.00       8/354937      get_header_type [36]
                0.00    0.00       8/1004881     header_from_data [31]
                0.00    0.00       8/80016       clear_type_bits [53]
-----------------------------------------------
                0.00    0.00  164963/345011      get_pointers_from_bit_vector [29]
                0.00    0.00  180048/345011      get_bit_vector_size [44]
[48]     0.0    0.00    0.00  345011         get_size_of_bit_type [48]
-----------------------------------------------
                0.00    0.00  109987/229999      alloc_map_ptr_used [33]
                0.00    0.00  120012/229999      alloc_map_set [50]
[49]     0.0    0.00    0.00  229999         alloc_map_check_offset [49]
-----------------------------------------------
                0.00    0.00   20000/120012      h_alloc_data [15]
                0.00    0.00   20004/120012      h_alloc_struct [14]
                0.00    0.00   80008/120012      h_alloc_raw [18]
[50]     0.0    0.00    0.00  120012         alloc_map_set [50]
                0.00    0.00  120012/229999      alloc_map_check_offset [49]
-----------------------------------------------
                0.00    0.00  109968/109968      get_number_of_pointers_in_struct [37]
[51]     0.0    0.00    0.00  109968         get_number_of_pointers_in_bit_vector [51]
-----------------------------------------------
                0.00    0.00   80024/80024       get_struct_size [60]
[52]     0.0    0.00    0.00   80024         size_for [52]
-----------------------------------------------
                0.00    0.00       8/80016       get_forwarding_address [47]
                0.00    0.00   80008/80016       set_type_bits [34]
[53]     0.0    0.00    0.00   80016         clear_type_bits [53]
-----------------------------------------------
                0.00    0.00   20000/80008       create_data_header [42]
                0.00    0.00   20004/80008       create_struct_header [41]
                0.00    0.00   40004/80008       copy_header [45]
[54]     0.0    0.00    0.00   80008         data_from_header [54]
-----------------------------------------------
                0.00    0.00   40004/80008       h_alloc [10]
                0.00    0.00   40004/80008       h_alloc_raw [18]
[55]     0.0    0.00    0.00   80008         page_get_bump [55]
-----------------------------------------------
                0.00    0.00   40004/80008       h_alloc [10]
                0.00    0.00   40004/80008       h_alloc_raw [18]
[56]     0.0    0.00    0.00   80008         page_move_bump [56]
-----------------------------------------------
                0.00    0.00   20000/60000       h_alloc_data [15]
                0.00    0.00   40000/60000       get_raw_data_size [43]
[57]     0.0    0.00    0.00   60000         get_data_size [57]
-----------------------------------------------
                0.00    0.00   40012/40012       bit_vector_create [61]
[58]     0.0    0.00    0.00   40012         get_bit_mask [58]
-----------------------------------------------
                0.00    0.00   40012/40012       bit_vector_create [61]
[59]     0.0    0.00    0.00   40012         get_bits_needed [59]
-----------------------------------------------
                0.00    0.00   20004/40008       h_alloc_struct [14]
                0.00    0.00   20004/40008       create_struct_header [41]
[60]     0.0    0.00    0.00   40008         get_struct_size [60]
                0.00    0.00   80024/80024       size_for [52]
-----------------------------------------------
                0.00    0.00   20004/20004       create_struct_header [41]
[61]     0.0    0.00    0.00   20004         bit_vector_create [61]
                0.00    0.00   40012/40012       get_bit_mask [58]
                0.00    0.00   40012/40012       get_bits_needed [59]
-----------------------------------------------
                0.00    0.00   20004/20004       create_struct_header [41]
[62]     0.0    0.00    0.00   20004         format_str_contains_ptrs [62]
-----------------------------------------------
                0.00    0.00    1876/1876        h_gc_dbg [3]
[63]     0.0    0.00    0.00    1876         page_get_type [63]
-----------------------------------------------
                0.00    0.00     393/786         h_alloc [10]
                0.00    0.00     393/786         h_alloc_raw [18]
[64]     0.0    0.00    0.00     786         find_first_passive_page [64]
-----------------------------------------------
                0.00    0.00     393/393         h_alloc [10]
[65]     0.0    0.00    0.00     393         number_of_passive_pages [65]
-----------------------------------------------
                0.00    0.00     393/393         h_gc_dbg [3]
[66]     0.0    0.00    0.00     393         page_reset [66]
-----------------------------------------------
                0.00    0.00     393/393         h_gc_dbg [3]
[67]     0.0    0.00    0.00     393         page_set_type [67]
-----------------------------------------------
                0.00    0.00      10/21          get_ptrs_from_stack [30]
                0.00    0.00      11/21          get_number_of_active_ptrs [24]
[68]     0.0    0.00    0.00      21         stack_find_next_ptr [68]
-----------------------------------------------
                0.00    0.00       1/1           h_init [9]
[69]     0.0    0.00    0.00       1         alloc_map_create [69]
-----------------------------------------------
                0.00    0.00       1/1           h_init [9]
[70]     0.0    0.00    0.00       1         alloc_map_mem_size_needed [70]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[71]     0.0    0.00    0.00       1         h_delete [71]
-----------------------------------------------
                0.00    0.00       1/1           h_gc_dbg [3]
[72]     0.0    0.00    0.00       1         set_active_to_transition [72]
-----------------------------------------------
                0.00    0.00       1/1           h_gc_dbg [3]
[73]     0.0    0.00    0.00       1         set_unsafe_pages_to_active [73]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

  [49] alloc_map_check_offset (alloc_map.c) [40] get_existing_data_size [11] h_used
  [69] alloc_map_create       [39] get_existing_size      [31] header_from_data
  [70] alloc_map_mem_size_needed [47] get_forwarding_address [21] int_cell_comparator
  [33] alloc_map_ptr_used     [36] get_header_type        [13] list_append
  [50] alloc_map_set          [27] get_internal_ht        [16] list_contains
  [61] bit_vector_create      [25] get_number_of_active_heap_ptrs_rec [46] list_new
  [53] clear_type_bits        [24] get_number_of_active_ptrs [32] move_ptr_forward
  [45] copy_header            [51] get_number_of_pointers_in_bit_vector [65] number_of_passive_pages
  [42] create_data_header     [37] get_number_of_pointers_in_struct [20] page_get_avail
   [8] create_pages           [29] get_pointers_from_bit_vector [55] page_get_bump
  [41] create_struct_header   [26] get_pointers_in_struct  [6] page_get_end
  [54] data_from_header        [4] get_ptr_page           [35] page_get_size
  [64] find_first_passive_page [30] get_ptrs_from_stack    [5] page_get_start
  [19] find_next_active_page  [43] get_raw_data_size      [63] page_get_type
  [62] format_str_contains_ptrs [48] get_size_of_bit_type [17] page_get_used
  [38] forward_header         [60] get_struct_size        [56] page_move_bump
   [7] forward_internal_array_ptrs_with_offset [10] h_alloc [66] page_reset
  [22] frame_dummy            [15] h_alloc_data           [67] page_set_type
  [28] get_active_heap_ptrs_rec [18] h_alloc_raw          [12] run_gc_if_above_threshold
  [23] get_active_ptrs        [14] h_alloc_struct         [72] set_active_to_transition
  [58] get_bit_mask           [71] h_delete               [34] set_type_bits
  [44] get_bit_vector_size     [2] h_gc                   [73] set_unsafe_pages_to_active
  [59] get_bits_needed         [3] h_gc_dbg               [52] size_for
  [57] get_data_size           [9] h_init                 [68] stack_find_next_ptr
