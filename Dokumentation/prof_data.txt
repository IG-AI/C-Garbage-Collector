
Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 65.55      0.38     0.38    10004     0.04     0.04  forward_internal_array_ptrs_with_offset
  9.49      0.44     0.06 18765628     0.00     0.00  page_get_used
  8.63      0.49     0.05    20006     0.00     0.01  h_used
  3.45      0.51     0.02 24254023     0.00     0.00  int_cell_comparator
  3.45      0.53     0.02    10000     0.00     0.00  list_contains
  2.59      0.54     0.02  3923834     0.00     0.00  page_get_avail
  1.73      0.55     0.01  4910619     0.00     0.00  get_ptr_page
  1.73      0.56     0.01    49880     0.00     0.00  alloc_map_ptr_used
  1.73      0.57     0.01    20004     0.00     0.00  h_alloc_raw
  1.73      0.58     0.01        1    10.01   427.70  h_gc_dbg
  0.00      0.58     0.00  3924228     0.00     0.00  find_next_active_page
  0.00      0.58     0.00   474299     0.00     0.00  header_from_data
  0.00      0.58     0.00   309478     0.00     0.00  get_internal_ht
  0.00      0.58     0.00   164851     0.00     0.00  get_size_of_bit_type
  0.00      0.58     0.00   164673     0.00     0.00  get_header_type
  0.00      0.58     0.00   109892     0.00     0.00  alloc_map_check_offset
  0.00      0.58     0.00    74803     0.00     0.00  move_ptr_forward
  0.00      0.58     0.00    60012     0.00     0.00  alloc_map_set
  0.00      0.58     0.00    50012     0.00     0.00  get_existing_size
  0.00      0.58     0.00    49862     0.00     0.00  get_number_of_pointers_in_bit_vector
  0.00      0.58     0.00    49862     0.00     0.00  get_number_of_pointers_in_struct
  0.00      0.58     0.00    40024     0.00     0.00  size_for
  0.00      0.58     0.00    40016     0.00     0.00  clear_type_bits
  0.00      0.58     0.00    40008     0.00     0.00  data_from_header
  0.00      0.58     0.00    40008     0.00     0.00  page_get_bump
  0.00      0.58     0.00    40008     0.00     0.00  page_move_bump
  0.00      0.58     0.00    40008     0.00     0.00  set_type_bits
  0.00      0.58     0.00    30012     0.00     0.00  get_bit_vector_size
  0.00      0.58     0.00    30008     0.00     0.00  get_existing_data_size
  0.00      0.58     0.00    30000     0.00     0.00  get_data_size
  0.00      0.58     0.00    24931     0.00     0.00  get_pointers_from_bit_vector
  0.00      0.58     0.00    24931     0.00     0.00  get_pointers_in_struct
  0.00      0.58     0.00    20012     0.00     0.00  get_bit_mask
  0.00      0.58     0.00    20012     0.00     0.00  get_bits_needed
  0.00      0.58     0.00    20008     0.00     0.00  get_struct_size
  0.00      0.58     0.00    20004     0.00     0.00  copy_header
  0.00      0.58     0.00    20004     0.00     0.00  forward_header
  0.00      0.58     0.00    20004     0.00     0.01  h_alloc
  0.00      0.58     0.00    20004     0.00     0.01  run_gc_if_above_threshold
  0.00      0.58     0.00    20000     0.00     0.00  get_raw_data_size
  0.00      0.58     0.00    10004     0.00     0.00  bit_vector_create
  0.00      0.58     0.00    10004     0.00     0.00  create_struct_header
  0.00      0.58     0.00    10004     0.00     0.00  format_str_contains_ptrs
  0.00      0.58     0.00    10004     0.00     0.01  h_alloc_struct
  0.00      0.58     0.00    10000     0.00     0.00  create_data_header
  0.00      0.58     0.00    10000     0.00     0.01  h_alloc_data
  0.00      0.58     0.00    10000     0.00     0.01  list_append
  0.00      0.58     0.00      938     0.00     0.00  page_get_type
  0.00      0.58     0.00      394     0.00     0.00  find_first_passive_page
  0.00      0.58     0.00      197     0.00     0.00  number_of_passive_pages
  0.00      0.58     0.00      197     0.00     0.00  page_reset
  0.00      0.58     0.00      197     0.00     0.00  page_set_type
  0.00      0.58     0.00       20     0.00     0.00  stack_find_next_ptr
  0.00      0.58     0.00        9     0.00     0.56  get_number_of_active_heap_ptrs_rec
  0.00      0.58     0.00        8     0.00     0.63  get_active_heap_ptrs_rec
  0.00      0.58     0.00        8     0.00     0.00  get_forwarding_address
  0.00      0.58     0.00        4     0.00     0.01  list_new
  0.00      0.58     0.00        1     0.00     0.00  alloc_map_create
  0.00      0.58     0.00        1     0.00     0.00  alloc_map_mem_size_needed
  0.00      0.58     0.00        1     0.00     0.00  create_pages
  0.00      0.58     0.00        1     0.00     5.00  get_active_ptrs
  0.00      0.58     0.00        1     0.00     5.00  get_number_of_active_ptrs
  0.00      0.58     0.00        1     0.00     0.00  get_ptrs_from_stack
  0.00      0.58     0.00        1     0.00     0.00  h_delete
  0.00      0.58     0.00        1     0.00   427.70  h_gc
  0.00      0.58     0.00        1     0.00     0.00  h_init
  0.00      0.58     0.00        1     0.00     0.00  set_active_to_transition
  0.00      0.58     0.00        1     0.00     0.00  set_unsafe_pages_to_active

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2014 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 1.72% of 0.58 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]    100.0    0.00    0.58                 main [1]
                0.00    0.43       1/1           h_gc [2]
                0.00    0.06   10000/10000       h_alloc_data [9]
                0.00    0.06   10000/10000       list_append [10]
                0.02    0.02   10000/10000       list_contains [12]
                0.00    0.00       4/4           list_new [22]
                0.00    0.00       1/1           h_init [67]
                0.00    0.00       1/1           h_delete [66]
-----------------------------------------------
                0.00    0.43       1/1           main [1]
[2]     73.7    0.00    0.43       1         h_gc [2]
                0.01    0.42       1/1           h_gc_dbg [3]
-----------------------------------------------
                0.01    0.42       1/1           h_gc [2]
[3]     73.7    0.01    0.42       1         h_gc_dbg [3]
                0.38    0.00   10004/10004       forward_internal_array_ptrs_with_offset [4]
                0.01    0.01   20004/20004       h_alloc_raw [14]
                0.01    0.00 4910619/4910619     get_ptr_page [16]
                0.00    0.01       1/1           get_number_of_active_ptrs [18]
                0.00    0.01       1/1           get_active_ptrs [19]
                0.00    0.00       2/20006       h_used [6]
                0.00    0.00   40016/164673      get_header_type [28]
                0.00    0.00     938/938         page_get_type [56]
                0.00    0.00     197/197         page_set_type [60]
                0.00    0.00     197/197         page_reset [59]
                0.00    0.00       8/8           get_forwarding_address [62]
                0.00    0.00       1/1           set_active_to_transition [68]
                0.00    0.00       1/1           set_unsafe_pages_to_active [69]
-----------------------------------------------
                0.38    0.00   10004/10004       h_gc_dbg [3]
[4]     65.5    0.38    0.00   10004         forward_internal_array_ptrs_with_offset [4]
                0.00    0.00   10004/30008       get_existing_data_size [42]
-----------------------------------------------
                0.00    0.06   10000/20004       h_alloc_data [9]
                0.00    0.06   10004/20004       h_alloc_struct [8]
[5]     19.4    0.00    0.11   20004         h_alloc [5]
                0.00    0.11   20004/20004       run_gc_if_above_threshold [7]
                0.01    0.00 1971771/3923834     page_get_avail [15]
                0.00    0.00 1971968/3924228     find_next_active_page [24]
                0.00    0.00   20004/40008       page_get_bump [38]
                0.00    0.00   20004/40008       page_move_bump [39]
                0.00    0.00     197/197         number_of_passive_pages [58]
                0.00    0.00     197/394         find_first_passive_page [57]
-----------------------------------------------
                0.00    0.00       2/20006       h_gc_dbg [3]
                0.05    0.06   20004/20006       run_gc_if_above_threshold [7]
[6]     18.1    0.05    0.06   20006         h_used [6]
                0.06    0.00 18765628/18765628     page_get_used [11]
-----------------------------------------------
                0.00    0.11   20004/20004       h_alloc [5]
[7]     18.1    0.00    0.11   20004         run_gc_if_above_threshold [7]
                0.05    0.06   20004/20006       h_used [6]
-----------------------------------------------
                0.00    0.00       4/10004       list_new [22]
                0.00    0.06   10000/10004       list_append [10]
[8]      9.7    0.00    0.06   10004         h_alloc_struct [8]
                0.00    0.06   10004/20004       h_alloc [5]
                0.00    0.00   10004/20008       get_struct_size [48]
                0.00    0.00   10004/10004       create_struct_header [53]
                0.00    0.00   10004/60012       alloc_map_set [31]
-----------------------------------------------
                0.00    0.06   10000/10000       main [1]
[9]      9.7    0.00    0.06   10000         h_alloc_data [9]
                0.00    0.06   10000/20004       h_alloc [5]
                0.00    0.00   10000/30000       get_data_size [43]
                0.00    0.00   10000/10000       create_data_header [55]
                0.00    0.00   10000/60012       alloc_map_set [31]
-----------------------------------------------
                0.00    0.06   10000/10000       main [1]
[10]     9.7    0.00    0.06   10000         list_append [10]
                0.00    0.06   10000/10004       h_alloc_struct [8]
-----------------------------------------------
                0.06    0.00 18765628/18765628     h_used [6]
[11]     9.5    0.06    0.00 18765628         page_get_used [11]
-----------------------------------------------
                0.02    0.02   10000/10000       main [1]
[12]     6.9    0.02    0.02   10000         list_contains [12]
                0.02    0.00 24254023/24254023     int_cell_comparator [13]
-----------------------------------------------
                0.02    0.00 24254023/24254023     list_contains [12]
[13]     3.4    0.02    0.00 24254023         int_cell_comparator [13]
-----------------------------------------------
                0.01    0.01   20004/20004       h_gc_dbg [3]
[14]     3.0    0.01    0.01   20004         h_alloc_raw [14]
                0.01    0.00 1952063/3923834     page_get_avail [15]
                0.00    0.00 1952260/3924228     find_next_active_page [24]
                0.00    0.00   40008/60012       alloc_map_set [31]
                0.00    0.00   20004/50012       get_existing_size [32]
                0.00    0.00   20004/40008       page_get_bump [38]
                0.00    0.00   20004/30008       get_existing_data_size [42]
                0.00    0.00   20004/40008       page_move_bump [39]
                0.00    0.00   20004/20004       copy_header [49]
                0.00    0.00   20004/20004       forward_header [50]
                0.00    0.00     197/394         find_first_passive_page [57]
-----------------------------------------------
                0.01    0.00 1952063/3923834     h_alloc_raw [14]
                0.01    0.00 1971771/3923834     h_alloc [5]
[15]     2.6    0.02    0.00 3923834         page_get_avail [15]
-----------------------------------------------
                0.01    0.00 4910619/4910619     h_gc_dbg [3]
[16]     1.7    0.01    0.00 4910619         get_ptr_page [16]
-----------------------------------------------
                0.00    0.00       8/49880       get_ptrs_from_stack [23]
                0.00    0.00      10/49880       get_number_of_active_ptrs [18]
                0.01    0.00   24930/49880       get_active_heap_ptrs_rec [21]
                0.01    0.00   24932/49880       get_number_of_active_heap_ptrs_rec [20]
[17]     1.7    0.01    0.00   49880         alloc_map_ptr_used [17]
                0.00    0.00   49880/109892      alloc_map_check_offset [29]
-----------------------------------------------
                0.00    0.01       1/1           h_gc_dbg [3]
[18]     0.9    0.00    0.01       1         get_number_of_active_ptrs [18]
                0.00    0.01       9/9           get_number_of_active_heap_ptrs_rec [20]
                0.00    0.00      10/49880       alloc_map_ptr_used [17]
                0.00    0.00      11/20          stack_find_next_ptr [61]
-----------------------------------------------
                0.00    0.01       1/1           h_gc_dbg [3]
[19]     0.9    0.00    0.01       1         get_active_ptrs [19]
                0.00    0.01       8/8           get_active_heap_ptrs_rec [21]
                0.00    0.00       1/1           get_ptrs_from_stack [23]
-----------------------------------------------
                               24920             get_number_of_active_heap_ptrs_rec [20]
                0.00    0.01       9/9           get_number_of_active_ptrs [18]
[20]     0.9    0.00    0.01       9+24920   get_number_of_active_heap_ptrs_rec [20]
                0.01    0.00   24932/49880       alloc_map_ptr_used [17]
                0.00    0.00   24929/164673      get_header_type [28]
                0.00    0.00   12466/49862       get_number_of_pointers_in_struct [34]
                0.00    0.00   12466/24931       get_pointers_in_struct [45]
                               24920             get_number_of_active_heap_ptrs_rec [20]
-----------------------------------------------
                               24919             get_active_heap_ptrs_rec [21]
                0.00    0.01       8/8           get_active_ptrs [19]
[21]     0.9    0.00    0.01       8+24919   get_active_heap_ptrs_rec [21]
                0.01    0.00   24930/49880       alloc_map_ptr_used [17]
                0.00    0.00   24927/164673      get_header_type [28]
                0.00    0.00   12465/49862       get_number_of_pointers_in_struct [34]
                0.00    0.00   12465/24931       get_pointers_in_struct [45]
                               24919             get_active_heap_ptrs_rec [21]
-----------------------------------------------
                0.00    0.00       4/4           main [1]
[22]     0.0    0.00    0.00       4         list_new [22]
                0.00    0.00       4/10004       h_alloc_struct [8]
-----------------------------------------------
                0.00    0.00       1/1           get_active_ptrs [19]
[23]     0.0    0.00    0.00       1         get_ptrs_from_stack [23]
                0.00    0.00       8/49880       alloc_map_ptr_used [17]
                0.00    0.00       9/20          stack_find_next_ptr [61]
-----------------------------------------------
                0.00    0.00 1952260/3924228     h_alloc_raw [14]
                0.00    0.00 1971968/3924228     h_alloc [5]
[24]     0.0    0.00    0.00 3924228         find_next_active_page [24]
-----------------------------------------------
                0.00    0.00       8/474299      get_forwarding_address [62]
                0.00    0.00   20000/474299      get_raw_data_size [51]
                0.00    0.00   20004/474299      copy_header [49]
                0.00    0.00   20004/474299      forward_header [50]
                0.00    0.00   24931/474299      get_pointers_from_bit_vector [44]
                0.00    0.00   30012/474299      get_bit_vector_size [41]
                0.00    0.00   49862/474299      get_number_of_pointers_in_struct [34]
                0.00    0.00  309478/474299      get_internal_ht [26]
[25]     0.0    0.00    0.00  474299         header_from_data [25]
-----------------------------------------------
                0.00    0.00   20000/309478      get_raw_data_size [51]
                0.00    0.00   24931/309478      get_pointers_in_struct [45]
                0.00    0.00   49862/309478      get_number_of_pointers_in_struct [34]
                0.00    0.00   50012/309478      get_existing_size [32]
                0.00    0.00  164673/309478      get_header_type [28]
[26]     0.0    0.00    0.00  309478         get_internal_ht [26]
                0.00    0.00  309478/474299      header_from_data [25]
-----------------------------------------------
                0.00    0.00   74803/164851      get_pointers_from_bit_vector [44]
                0.00    0.00   90048/164851      get_bit_vector_size [41]
[27]     0.0    0.00    0.00  164851         get_size_of_bit_type [27]
-----------------------------------------------
                0.00    0.00       8/164673      get_forwarding_address [62]
                0.00    0.00   24927/164673      get_active_heap_ptrs_rec [21]
                0.00    0.00   24929/164673      get_number_of_active_heap_ptrs_rec [20]
                0.00    0.00   24931/164673      get_pointers_in_struct [45]
                0.00    0.00   40016/164673      h_gc_dbg [3]
                0.00    0.00   49862/164673      get_number_of_pointers_in_struct [34]
[28]     0.0    0.00    0.00  164673         get_header_type [28]
                0.00    0.00  164673/309478      get_internal_ht [26]
-----------------------------------------------
                0.00    0.00   49880/109892      alloc_map_ptr_used [17]
                0.00    0.00   60012/109892      alloc_map_set [31]
[29]     0.0    0.00    0.00  109892         alloc_map_check_offset [29]
-----------------------------------------------
                0.00    0.00   74803/74803       get_pointers_from_bit_vector [44]
[30]     0.0    0.00    0.00   74803         move_ptr_forward [30]
-----------------------------------------------
                0.00    0.00   10000/60012       h_alloc_data [9]
                0.00    0.00   10004/60012       h_alloc_struct [8]
                0.00    0.00   40008/60012       h_alloc_raw [14]
[31]     0.0    0.00    0.00   60012         alloc_map_set [31]
                0.00    0.00   60012/109892      alloc_map_check_offset [29]
-----------------------------------------------
                0.00    0.00   20004/50012       h_alloc_raw [14]
                0.00    0.00   30008/50012       get_existing_data_size [42]
[32]     0.0    0.00    0.00   50012         get_existing_size [32]
                0.00    0.00   50012/309478      get_internal_ht [26]
                0.00    0.00   30012/30012       get_bit_vector_size [41]
                0.00    0.00   20000/20000       get_raw_data_size [51]
-----------------------------------------------
                0.00    0.00   49862/49862       get_number_of_pointers_in_struct [34]
[33]     0.0    0.00    0.00   49862         get_number_of_pointers_in_bit_vector [33]
-----------------------------------------------
                0.00    0.00   12465/49862       get_active_heap_ptrs_rec [21]
                0.00    0.00   12466/49862       get_number_of_active_heap_ptrs_rec [20]
                0.00    0.00   24931/49862       get_pointers_in_struct [45]
[34]     0.0    0.00    0.00   49862         get_number_of_pointers_in_struct [34]
                0.00    0.00   49862/164673      get_header_type [28]
                0.00    0.00   49862/474299      header_from_data [25]
                0.00    0.00   49862/309478      get_internal_ht [26]
                0.00    0.00   49862/49862       get_number_of_pointers_in_bit_vector [33]
-----------------------------------------------
                0.00    0.00   40024/40024       get_struct_size [48]
[35]     0.0    0.00    0.00   40024         size_for [35]
-----------------------------------------------
                0.00    0.00       8/40016       get_forwarding_address [62]
                0.00    0.00   40008/40016       set_type_bits [40]
[36]     0.0    0.00    0.00   40016         clear_type_bits [36]
-----------------------------------------------
                0.00    0.00   10000/40008       create_data_header [55]
                0.00    0.00   10004/40008       create_struct_header [53]
                0.00    0.00   20004/40008       copy_header [49]
[37]     0.0    0.00    0.00   40008         data_from_header [37]
-----------------------------------------------
                0.00    0.00   20004/40008       h_alloc [5]
                0.00    0.00   20004/40008       h_alloc_raw [14]
[38]     0.0    0.00    0.00   40008         page_get_bump [38]
-----------------------------------------------
                0.00    0.00   20004/40008       h_alloc [5]
                0.00    0.00   20004/40008       h_alloc_raw [14]
[39]     0.0    0.00    0.00   40008         page_move_bump [39]
-----------------------------------------------
                0.00    0.00   10000/40008       create_data_header [55]
                0.00    0.00   10004/40008       create_struct_header [53]
                0.00    0.00   20004/40008       forward_header [50]
[40]     0.0    0.00    0.00   40008         set_type_bits [40]
                0.00    0.00   40008/40016       clear_type_bits [36]
-----------------------------------------------
                0.00    0.00   30012/30012       get_existing_size [32]
[41]     0.0    0.00    0.00   30012         get_bit_vector_size [41]
                0.00    0.00   90048/164851      get_size_of_bit_type [27]
                0.00    0.00   30012/474299      header_from_data [25]
-----------------------------------------------
                0.00    0.00   10004/30008       forward_internal_array_ptrs_with_offset [4]
                0.00    0.00   20004/30008       h_alloc_raw [14]
[42]     0.0    0.00    0.00   30008         get_existing_data_size [42]
                0.00    0.00   30008/50012       get_existing_size [32]
-----------------------------------------------
                0.00    0.00   10000/30000       h_alloc_data [9]
                0.00    0.00   20000/30000       get_raw_data_size [51]
[43]     0.0    0.00    0.00   30000         get_data_size [43]
-----------------------------------------------
                0.00    0.00   24931/24931       get_pointers_in_struct [45]
[44]     0.0    0.00    0.00   24931         get_pointers_from_bit_vector [44]
                0.00    0.00   74803/164851      get_size_of_bit_type [27]
                0.00    0.00   74803/74803       move_ptr_forward [30]
                0.00    0.00   24931/474299      header_from_data [25]
-----------------------------------------------
                0.00    0.00   12465/24931       get_active_heap_ptrs_rec [21]
                0.00    0.00   12466/24931       get_number_of_active_heap_ptrs_rec [20]
[45]     0.0    0.00    0.00   24931         get_pointers_in_struct [45]
                0.00    0.00   24931/164673      get_header_type [28]
                0.00    0.00   24931/49862       get_number_of_pointers_in_struct [34]
                0.00    0.00   24931/309478      get_internal_ht [26]
                0.00    0.00   24931/24931       get_pointers_from_bit_vector [44]
-----------------------------------------------
                0.00    0.00   20012/20012       bit_vector_create [52]
[46]     0.0    0.00    0.00   20012         get_bit_mask [46]
-----------------------------------------------
                0.00    0.00   20012/20012       bit_vector_create [52]
[47]     0.0    0.00    0.00   20012         get_bits_needed [47]
-----------------------------------------------
                0.00    0.00   10004/20008       h_alloc_struct [8]
                0.00    0.00   10004/20008       create_struct_header [53]
[48]     0.0    0.00    0.00   20008         get_struct_size [48]
                0.00    0.00   40024/40024       size_for [35]
-----------------------------------------------
                0.00    0.00   20004/20004       h_alloc_raw [14]
[49]     0.0    0.00    0.00   20004         copy_header [49]
                0.00    0.00   20004/474299      header_from_data [25]
                0.00    0.00   20004/40008       data_from_header [37]
-----------------------------------------------
                0.00    0.00   20004/20004       h_alloc_raw [14]
[50]     0.0    0.00    0.00   20004         forward_header [50]
                0.00    0.00   20004/474299      header_from_data [25]
                0.00    0.00   20004/40008       set_type_bits [40]
-----------------------------------------------
                0.00    0.00   20000/20000       get_existing_size [32]
[51]     0.0    0.00    0.00   20000         get_raw_data_size [51]
                0.00    0.00   20000/309478      get_internal_ht [26]
                0.00    0.00   20000/474299      header_from_data [25]
                0.00    0.00   20000/30000       get_data_size [43]
-----------------------------------------------
                0.00    0.00   10004/10004       create_struct_header [53]
[52]     0.0    0.00    0.00   10004         bit_vector_create [52]
                0.00    0.00   20012/20012       get_bit_mask [46]
                0.00    0.00   20012/20012       get_bits_needed [47]
-----------------------------------------------
                0.00    0.00   10004/10004       h_alloc_struct [8]
[53]     0.0    0.00    0.00   10004         create_struct_header [53]
                0.00    0.00   10004/20008       get_struct_size [48]
                0.00    0.00   10004/10004       format_str_contains_ptrs [54]
                0.00    0.00   10004/10004       bit_vector_create [52]
                0.00    0.00   10004/40008       set_type_bits [40]
                0.00    0.00   10004/40008       data_from_header [37]
-----------------------------------------------
                0.00    0.00   10004/10004       create_struct_header [53]
[54]     0.0    0.00    0.00   10004         format_str_contains_ptrs [54]
-----------------------------------------------
                0.00    0.00   10000/10000       h_alloc_data [9]
[55]     0.0    0.00    0.00   10000         create_data_header [55]
                0.00    0.00   10000/40008       set_type_bits [40]
                0.00    0.00   10000/40008       data_from_header [37]
-----------------------------------------------
                0.00    0.00     938/938         h_gc_dbg [3]
[56]     0.0    0.00    0.00     938         page_get_type [56]
-----------------------------------------------
                0.00    0.00     197/394         h_alloc [5]
                0.00    0.00     197/394         h_alloc_raw [14]
[57]     0.0    0.00    0.00     394         find_first_passive_page [57]
-----------------------------------------------
                0.00    0.00     197/197         h_alloc [5]
[58]     0.0    0.00    0.00     197         number_of_passive_pages [58]
-----------------------------------------------
                0.00    0.00     197/197         h_gc_dbg [3]
[59]     0.0    0.00    0.00     197         page_reset [59]
-----------------------------------------------
                0.00    0.00     197/197         h_gc_dbg [3]
[60]     0.0    0.00    0.00     197         page_set_type [60]
-----------------------------------------------
                0.00    0.00       9/20          get_ptrs_from_stack [23]
                0.00    0.00      11/20          get_number_of_active_ptrs [18]
[61]     0.0    0.00    0.00      20         stack_find_next_ptr [61]
-----------------------------------------------
                0.00    0.00       8/8           h_gc_dbg [3]
[62]     0.0    0.00    0.00       8         get_forwarding_address [62]
                0.00    0.00       8/164673      get_header_type [28]
                0.00    0.00       8/474299      header_from_data [25]
                0.00    0.00       8/40016       clear_type_bits [36]
-----------------------------------------------
                0.00    0.00       1/1           h_init [67]
[63]     0.0    0.00    0.00       1         alloc_map_create [63]
-----------------------------------------------
                0.00    0.00       1/1           h_init [67]
[64]     0.0    0.00    0.00       1         alloc_map_mem_size_needed [64]
-----------------------------------------------
                0.00    0.00       1/1           h_init [67]
[65]     0.0    0.00    0.00       1         create_pages [65]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[66]     0.0    0.00    0.00       1         h_delete [66]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[67]     0.0    0.00    0.00       1         h_init [67]
                0.00    0.00       1/1           alloc_map_mem_size_needed [64]
                0.00    0.00       1/1           alloc_map_create [63]
                0.00    0.00       1/1           create_pages [65]
-----------------------------------------------
                0.00    0.00       1/1           h_gc_dbg [3]
[68]     0.0    0.00    0.00       1         set_active_to_transition [68]
-----------------------------------------------
                0.00    0.00       1/1           h_gc_dbg [3]
[69]     0.0    0.00    0.00       1         set_unsafe_pages_to_active [69]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2014 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

  [29] alloc_map_check_offset (alloc_map.c) [42] get_existing_data_size [67] h_init
  [63] alloc_map_create       [32] get_existing_size       [6] h_used
  [64] alloc_map_mem_size_needed [62] get_forwarding_address [25] header_from_data
  [17] alloc_map_ptr_used     [28] get_header_type        [13] int_cell_comparator
  [31] alloc_map_set          [26] get_internal_ht        [10] list_append
  [52] bit_vector_create      [20] get_number_of_active_heap_ptrs_rec [12] list_contains
  [36] clear_type_bits        [18] get_number_of_active_ptrs [22] list_new
  [49] copy_header            [33] get_number_of_pointers_in_bit_vector [30] move_ptr_forward
  [55] create_data_header     [34] get_number_of_pointers_in_struct [58] number_of_passive_pages
  [65] create_pages           [44] get_pointers_from_bit_vector [15] page_get_avail
  [53] create_struct_header   [45] get_pointers_in_struct [38] page_get_bump
  [37] data_from_header       [16] get_ptr_page           [56] page_get_type
  [57] find_first_passive_page [23] get_ptrs_from_stack   [11] page_get_used
  [24] find_next_active_page  [51] get_raw_data_size      [39] page_move_bump
  [54] format_str_contains_ptrs [27] get_size_of_bit_type [59] page_reset
  [50] forward_header         [48] get_struct_size        [60] page_set_type
   [4] forward_internal_array_ptrs_with_offset [5] h_alloc [7] run_gc_if_above_threshold
  [21] get_active_heap_ptrs_rec [9] h_alloc_data          [68] set_active_to_transition
  [19] get_active_ptrs        [14] h_alloc_raw            [40] set_type_bits
  [46] get_bit_mask            [8] h_alloc_struct         [69] set_unsafe_pages_to_active
  [41] get_bit_vector_size    [66] h_delete               [35] size_for
  [47] get_bits_needed         [2] h_gc                   [61] stack_find_next_ptr
  [43] get_data_size           [3] h_gc_dbg
